; We start the process after the BASIC instructions have been shown with *RUN MINER1

; MINER1.a  7400 -> 7bff
;
; The entry point in MINER1.a is 'miner1Entry' which just *RUNs MINER2
; 'fromMiner2' in MINER1 displays the dancing letters graphics and scrolling text, 
; (timed with vsync eventv) waits for space and jumps to 'afterSpace' in MINER2.a

; MINER2.a  4c00 -> 73ff
;
; The entry point in MINER2.a is 'miner2Entry' which resets two counters, does:
; *FX 200,3 (clear memory on BREAK)
; draws MODE 7 messages on screen
; calls 'fromMiner2' in MINER1.a to display the animated letters and wait for SPACE
; to be pressed. Once pressed, jumps back into MINER2.a at 'afterSpace'
;
;   We  copy ($5400 to $72ff) -> ($1100, $2fff)
;   and copy ($4c00 to $53ff) -> ($0500, $0cff)
;   *FX 13,4 - disable vsync events
;   swap in the flowery MANIC MINER logo
;   *FX 200,3 - clear memory on BREAK
;   switch to MODE 1
;   show the logo on screen
;   *FX 14,4 - enable VSYNC events
;   *L.MINER3 to ($3000-$327f)
;   *L.MINER4 to ($5580-$7fff)
;   copy ($0500-$05ff) to ($0d00-$0dff)
;   copy ($0600-$06ff) to ($0f00-$0fff)
;   copy ($0700-$07ff) to ($1000-$10ff)
;   JMP to 'miner4EntryPoint' in MINER4.a
;

; MINER3.a  3000 -> 327f
;
;

; MINER4.a  5580 -> 7fff
;
;   *FX 13,4 (disable vsync event)
;   output 8 line feeds and wait for a key press
;   copy graphics to $0500-$07ff
;   EOR with #$aa memory in the region ($0900-$0cff)

;   copy ($5c00-$5f66) to ($2c98-$2ffe)


; 0500 -> 07ff        MINER4.a $5900-$5bff = willy graphics, and flowery graphics
; 0800 -> 0cff        MINER2.a
; 0d00 -> 0dff        MINER2.a
; 0f00 -> 2fff        MINER2.a
; 3000 -> 327f        MINER3.a
; 3280 -> 61ff        screen (19 rows)
; 5580 -> 7fff        MINER4.a
